{"version":3,"sources":["utils/Context.jsx","components/Loading/index.jsx","Route/index.jsx","container/App.jsx","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","image","setImage","date","risk","carruselImage","setCarruselImage","openSnackBar","setOpenSnackBar","severityValue","setSeverityValue","snackBarMessage","setSnackBarMessage","valueName","setValueName","open","setOpen","Provider","value","handleCloseAlert","event","reason","useStyles","makeStyles","theme","root","display","justifyContent","Loading","classes","className","CircularProgress","Home","lazy","Galeria","Landing","Routes","fallback","exact","path","component","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yLAEaA,E,OAAUC,EAAMC,gBAEhBC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAGrBC,mBAAS,IAHY,mBAGxCC,EAHwC,KAGjCC,EAHiC,OAINF,mBAAS,CAChD,CACEC,MAAO,mDACPE,KAAM,4BACNC,KAAM,OAER,CACEH,MAAO,mDACPE,KAAM,4BACNC,KAAM,OAER,CACEH,MAAO,mDACPE,KAAM,4BACNC,KAAM,SAlBqC,mBAIxCC,EAJwC,KAIzBC,EAJyB,OAsBPN,oBAAS,GAtBF,mBAsBxCO,EAtBwC,KAsB1BC,EAtB0B,OAuBLR,mBAAS,WAvBJ,mBAuBxCS,EAvBwC,KAuBzBC,EAvByB,OAwBFV,mBAAS,4BAxBP,mBAwBxCW,EAxBwC,KAwBvBC,EAxBuB,OAmCdZ,mBAAS,IAnCK,mBAmCxCa,EAnCwC,KAmC7BC,EAnC6B,OAqCvBd,oBAAS,GArCc,mBAqCxCe,EArCwC,KAqClCC,EArCkC,KAyC/C,OACE,cAACrB,EAAQsB,SAAT,CACEC,MAAO,CACLH,OACAC,UACAX,gBACAC,mBACAL,QACAC,WACAK,eACAC,kBACAC,gBACAC,mBACAS,iBA3BmB,SAACC,EAAOC,GAChB,cAAXA,GAGJb,GAAgB,IAwBZG,kBACAC,qBACAC,YACAC,gBAhBJ,SAmBGf,M,yGC5DDuB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,eAAgB,cAKL,SAASC,IACtB,IAAMC,EAAUP,IAEhB,OAEE,qBAAKQ,UAAWD,EAAQJ,KAAxB,SACE,cAACM,EAAA,EAAD,MCdN,IAAMC,EAAOC,gBAAK,kBAAM,8DAClBC,EAAUD,gBAAK,kBAAM,iCACrBE,EAAUF,gBAAK,kBAAM,8DAEZ,SAASG,IACtB,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAACT,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,QAAQC,UAAWR,IACrC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,WAAWC,UAAWN,W,oBCV5CV,EAAQiB,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAeGE,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAevB,MAAOA,EAAtB,SACE,cAACY,EAAD,OCVSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCEdQ,IAASC,OACP,cAAC/D,EAAA,EAAD,UACE,cAAC,EAAD,MAEFgE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20161c81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const Context = React.createContext();\n\nexport const ContextProvider = ({ children }) => {\n  \n\n  const [image, setImage] = useState(\"\")\n  const [carruselImage, setCarruselImage]= useState([\n    {\n      image: \"https://fake-img-endpoint.vercel.app/api/preview\",\n      date: \"Sun Nov 22 2020 14:39:27 \",\n      risk: \"low\",\n    },\n    {\n      image: \"https://fake-img-endpoint.vercel.app/api/preview\",\n      date: \"Sun Nov 22 2020 14:39:27 \",\n      risk: \"low\",\n    },\n    {\n      image: \"https://fake-img-endpoint.vercel.app/api/preview\",\n      date: \"Sun Nov 22 2020 14:39:27 \",\n      risk: \"low\",\n    },\n  ])\n  // SnackBar\n  const [openSnackBar, setOpenSnackBar] = useState(false);\n  const [severityValue, setSeverityValue] = useState(\"success\");\n  const [snackBarMessage, setSnackBarMessage]= useState('image taken successfully')\n\n  // SnackBar handleClose\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackBar(false);\n  };\n\n  // data paciente\n  const [valueName, setValueName] =useState(\"\");\n// BackDrop\n  const [open, setOpen] = useState(true);\n\n\n // return Value\n  return (\n    <Context.Provider\n      value={{\n        open, \n        setOpen,\n        carruselImage, \n        setCarruselImage,\n        image, \n        setImage,\n        openSnackBar,\n        setOpenSnackBar,\n        severityValue, \n        setSeverityValue,\n        handleCloseAlert,\n        snackBarMessage, \n        setSnackBarMessage,\n        valueName, \n        setValueName\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};","import React from 'react';\n// material\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n\n  },\n}));\n\nexport default function Loading() {\n  const classes = useStyles();\n\n  return (\n\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React, { Suspense, lazy } from 'react'\n// router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Loading from '../components/Loading';\n\nconst Home = lazy(() => import('../page/Home'));\nconst Galeria = lazy(() => import('../page/Galeria'));\nconst Landing = lazy(() => import('../page/Landing'));\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Suspense fallback={<Loading/>}>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/galeria\" component={Galeria} />\n        </Switch>\n      </Suspense>\n    </Router>\n  )\n}\n","\n// Routes\nimport Routes from '../Route';\n// Material global style\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ee8d8c',\n    },\n    secondary: {\n      main: '#726361',\n    },\n  },\n});\n\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Routes/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './container/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ContextProvider } from \"./utils/Context\";\n\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}